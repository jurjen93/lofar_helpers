DDF.py
--Data-MS=mslist.txt
--Deconv-PeakFactor=0.001
--Data-ColName=CORRECTED_DATA
--Parallel-NCPU=32
--Output-Mode=Clean
--Deconv-CycleFactor=0
--Deconv-MaxMinorIter=15000
--Deconv-MaxMajorIter=5
--Deconv-Mode=SSD
--Weight-Robust=-0.5
--Image-NPix=466
--CF-wmax=50000
--CF-Nw=100
--Beam-Model=None
--Beam-LOFARBeamMode=A
--Beam-NBand=1
--Output-Also=onNeds
--Image-Cell=1.5
--Facets-NFacets=1
--Freq-NDegridBand=1
--Deconv-RMSFactor=3.0
--Deconv-FluxThreshold=0.0
--Data-Sort=1
--Cache-Dir=.
--Freq-NBand=2
--GAClean-MinSizeInit=10
--Facets-DiamMax=1.5
--Facets-DiamMin=0.1
--Cache-Dirty=auto
--Weight-ColName=WEIGHT_SPECTRUM
--Output-Name=test_007
--Comp-BDAMode=1
--DDESolutions-DDModeGrid=AP
--DDESolutions-DDModeDeGrid=AP
--Cache-Reset=1
--RIME-ForwardMode=BDA-degrid
--Predict-ColName=MODEL_DATA
--Selection-UVRange=[0.1,2000.]
--Output-RestoringBeam=6.0
--Mask-SigTh=5.0
--Mask-External=image_006.app.restored.fits.mask.fits
--Mask-Auto=0


        cmd = 'DPPP numthreads='+str(multiprocessing.cpu_count())+ ' msin=' + ms + ' msin.datacolumn=DATA msout=. '
        cmd += 'msin.weightcolumn=WEIGHT_SPECTRUM '
        cmd += 'msout.datacolumn=CORRECTED_DATA steps=[ac1,ac2] msout.storagemanager=dysco '
        cmd += 'ac1.parmdb='+H5name + ' ac2.parmdb='+H5name + ' '
        cmd += 'ac1.type=applycal ac2.type=applycal '
        cmd += 'ac1.correction=phase000 ac2.correction=amplitude000 ac2.updateweights=True '
        print('DPPP applycal:', cmd)
        os.system(cmd)
        os.system(taql + " 'update " + ms + " set DATA=CORRECTED_DATA'")